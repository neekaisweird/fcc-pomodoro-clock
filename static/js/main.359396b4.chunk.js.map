{"version":3,"sources":["context/reducer.js","context/GlobalState.js","components/Timer.js","hooks/useInterval.js","components/LengthControl.js","components/StartStop.js","components/Reset.js","components/Controls.js","components/Circle.js","components/PomodoroClock.js","App.js","index.js"],"names":["state","action","type","currentTimer","breakTime","time","sessionTime","running","kind","initialState","PomodoroContext","createContext","PomodoroProvider","children","useReducer","reducer","dispatch","Provider","value","breakIncrement","breakDecrement","sessionIncrement","sessionDecrement","reset","start","stop","setTimer","changeTimer","TimerWrapper","styled","div","TimerLeft","h1","TimerLabel","h2","Timer","useContext","beep","useRef","callback","delay","savedCallback","useEffect","current","id","setInterval","clearInterval","useInterval","currentTime","play","setTimeout","pause","milliseconds","seconds","Math","floor","minutes","convertTime","ref","src","Control","Label","h4","Length","Button","button","LengthControl","selected","decrement","increment","disabled","onClick","StartStop","Reset","ControlsWrapper","Flex","Controls","circumference","PI","Border","circle","Circle","progressCircle","totalTime","amount","offset","requestAnimationFrame","style","strokeDashoffset","xmlns","height","radius","width","backgroundColor","gridColumn","gridRow","zIndex","Clock","PomodoroClock","display","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.359396b4.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case 'BREAK_INCREMENT':\n      if (state.currentTimer.type === 'Break') {\n        return {\n          ...state,\n          breakTime: state.breakTime + 1,\n          currentTimer: {\n            ...state.currentTimer,\n            time: (state.breakTime + 1) * 60000,\n          },\n        };\n      }\n      return {\n        ...state,\n        breakTime: state.breakTime + 1,\n      };\n    case 'BREAK_DECREMENT':\n      if (state.currentTimer.type === 'Break') {\n        return {\n          ...state,\n          breakTime: state.breakTime - 1,\n          currentTimer: {\n            ...state.currentTimer,\n            time: (state.breakTime - 1) * 60000,\n          },\n        };\n      }\n      return {\n        ...state,\n        breakTime: state.breakTime - 1,\n      };\n    case 'SESSION_INCREMENT':\n      if (state.currentTimer.type === 'Session') {\n        return {\n          ...state,\n          sessionTime: state.sessionTime + 1,\n          currentTimer: {\n            ...state.currentTimer,\n            time: (state.sessionTime + 1) * 60000,\n          },\n        };\n      }\n      return {\n        ...state,\n        sessionTime: state.sessionTime + 1,\n      };\n    case 'SESSION_DECREMENT':\n      if (state.currentTimer.type === 'Session') {\n        return {\n          ...state,\n          sessionTime: state.sessionTime - 1,\n          currentTimer: {\n            ...state.currentTimer,\n            time: (state.sessionTime - 1) * 60000,\n          },\n        };\n      }\n      return {\n        ...state,\n        sessionTime: state.sessionTime - 1,\n      };\n    case 'RESET':\n      return {\n        ...state,\n        breakTime: 5,\n        sessionTime: 25,\n        currentTimer: {\n          type: 'Session',\n          time: 1500000,\n          running: false,\n        },\n      };\n    case 'START':\n      return {\n        ...state,\n        currentTimer: { ...state.currentTimer, running: true },\n      };\n    case 'STOP':\n      return {\n        ...state,\n        currentTimer: { ...state.currentTimer, running: false },\n      };\n    case 'SET_TIMER':\n      return {\n        ...state,\n        currentTimer: { ...state.currentTimer, time: action.time },\n      };\n    case 'CHANGE_TIMER':\n      if (action.kind === 'Session') {\n        return {\n          ...state,\n          currentTimer: {\n            type: 'Break',\n            time: state.breakTime * 60000,\n            running: true,\n          },\n        };\n      } else {\n        return {\n          ...state,\n          currentTimer: {\n            type: 'Session',\n            time: state.sessionTime * 60000,\n            running: true,\n          },\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport reducer from './reducer';\n\nconst initialState = {\n  breakTime: 5,\n  sessionTime: 25,\n  currentTimer: {\n    type: 'Session',\n    time: 1500000,\n    running: false,\n  },\n};\n\nexport const PomodoroContext = createContext(initialState);\n\nexport const PomodoroProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const breakIncrement = () => {\n    dispatch({\n      type: 'BREAK_INCREMENT',\n    });\n  };\n  const breakDecrement = () => {\n    dispatch({\n      type: 'BREAK_DECREMENT',\n    });\n  };\n  const sessionIncrement = () => {\n    dispatch({\n      type: 'SESSION_INCREMENT',\n    });\n  };\n  const sessionDecrement = () => {\n    dispatch({\n      type: 'SESSION_DECREMENT',\n    });\n  };\n  const start = () => {\n    dispatch({\n      type: 'START',\n    });\n  };\n  const stop = () => {\n    dispatch({\n      type: 'STOP',\n    });\n  };\n  const reset = () => {\n    dispatch({\n      type: 'RESET',\n    });\n  };\n  const setTimer = (time) => {\n    dispatch({\n      type: 'SET_TIMER',\n      time,\n    });\n  };\n  const changeTimer = (kind) => {\n    dispatch({\n      type: 'CHANGE_TIMER',\n      kind,\n    });\n  };\n  return (\n    <PomodoroContext.Provider\n      value={{\n        breakTime: state.breakTime,\n        sessionTime: state.sessionTime,\n        currentTimer: state.currentTimer,\n        breakIncrement,\n        breakDecrement,\n        sessionIncrement,\n        sessionDecrement,\n        reset,\n        start,\n        stop,\n        setTimer,\n        changeTimer,\n      }}\n    >\n      {children}\n    </PomodoroContext.Provider>\n  );\n};\n","import React, { useContext, useEffect, useRef } from 'react';\nimport { PomodoroContext } from '../context/GlobalState';\nimport useInterval from '../hooks/useInterval';\nimport styled from 'styled-components';\n\nconst TimerWrapper = styled.div`\n  font-family: 'Fira Code', monospace;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  height: 400px;\n  grid-column: 1;\n  grid-row: 1;\n  color: #fff;\n  text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.5);\n`;\n\nconst TimerLeft = styled.h1`\n  font-size: 6rem;\n  font-weight: 400;\n  margin: 1rem 0;\n`;\n\nconst TimerLabel = styled.h2`\n  font-size: 2rem;\n  font-weight: 400;\n  margin: 0;\n  text-transform: uppercase;\n`;\n\nconst convertTime = (milliseconds) => {\n  let seconds = Math.floor(milliseconds / 1000);\n  let minutes = Math.floor(seconds / 60);\n  seconds = seconds % 60;\n  if (minutes < 10) minutes = `0${minutes}`;\n  if (seconds < 10) seconds = `0${seconds}`;\n  return `${minutes}:${seconds}`;\n};\n\nconst Timer = () => {\n  const { currentTimer, setTimer, changeTimer } = useContext(PomodoroContext);\n  const beep = useRef();\n  const playBeep = () => {\n    if (beep.current !== null) {\n      beep.current.currentTime = 0;\n      beep.current.play();\n    }\n  };\n  useInterval(\n    () => {\n      setTimer(currentTimer.time - 1000);\n    },\n    currentTimer.running && currentTimer.time !== -1000 ? 1000 : null\n  );\n  useEffect(() => {\n    if (currentTimer.time === 0) playBeep();\n    if (currentTimer.time === 1000)\n      setTimeout(() => {\n        changeTimer(currentTimer.type);\n      }, 1000);\n\n    if (!currentTimer.running) {\n      beep.current.pause();\n      beep.current.currentTime = 0;\n    }\n  });\n\n  return (\n    <>\n      <TimerWrapper>\n        <TimerLeft id=\"time-left\">{convertTime(currentTimer.time)}</TimerLeft>\n        <TimerLabel id=\"timer-label\">\n          {currentTimer.type === 'Session' ? 'Focus Time' : 'Break Time'}\n        </TimerLabel>\n      </TimerWrapper>\n      <audio\n        id=\"beep\"\n        ref={beep}\n        src=\"https://sampleswap.org/samples-ghost/DRUM%20LOOPS%20and%20BREAKS/121%20to%20130%20bpm/331[kb]125_lo-squeaky-beep.aif.mp3\"\n      />\n    </>\n  );\n};\n\nexport default Timer;\n","import { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React, { useContext } from 'react';\nimport { PomodoroContext } from '../context/GlobalState';\nimport styled from 'styled-components';\n\nconst Control = styled.div`\n  font-family: 'Fira Code', monospace;\n  text-align: center;\n`;\n\nconst Label = styled.h4`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: 500;\n  font-size: 1.7rem;\n  margin: 0;\n`;\n\nconst Length = styled.div`\n  display: inline-block;\n  font-size: 2rem;\n  font-weight: 500;\n  width: 50px;\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: none;\n  display: inline;\n  font-size: 2.3rem;\n  font-family: inherit;\n  padding: 0 1rem;\n  cursor: pointer;\n`;\n\nconst LengthControl = ({ type }) => {\n  const {\n    sessionIncrement,\n    sessionDecrement,\n    sessionTime,\n    breakIncrement,\n    breakDecrement,\n    breakTime,\n    currentTimer,\n  } = useContext(PomodoroContext);\n  let selected;\n  type === 'session'\n    ? (selected = {\n        time: sessionTime,\n        decrement: () => {\n          sessionDecrement();\n        },\n        increment: () => {\n          sessionIncrement();\n        },\n      })\n    : (selected = {\n        time: breakTime,\n        decrement: () => {\n          breakDecrement();\n        },\n        increment: () => {\n          breakIncrement();\n        },\n      });\n  return (\n    <Control>\n      <Label id={`${type}-label`}>\n        {type === 'session' ? 'Focus' : 'Break'} Length\n      </Label>\n      <Button\n        id={`${type}-decrement`}\n        disabled={currentTimer.running || selected.time === 1}\n        onClick={selected.decrement}\n      >\n        -\n      </Button>\n      <Length id={`${type}-length`}>{selected.time}</Length>\n      <Button\n        id={`${type}-increment`}\n        disabled={currentTimer.running || selected.time === 60}\n        onClick={selected.increment}\n      >\n        +\n      </Button>\n    </Control>\n  );\n};\n\nexport default LengthControl;\n","import React, { useContext } from 'react';\nimport { PomodoroContext } from '../context/GlobalState';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: 2px solid #000;\n  border-radius: 2px;\n  padding: 0.7rem 1rem;\n  font-family: 'Fira Code', monospace;\n  font-size: 1.5rem;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 500;\n  cursor: pointer;\n  transition: border-radius 200ms;\n  &:hover {\n    border-radius: 15px;\n  }\n`;\n\nconst StartStop = () => {\n  const { currentTimer, start, stop } = useContext(PomodoroContext);\n  return (\n    <>\n      {currentTimer.running ? (\n        <Button id=\"start_stop\" onClick={() => stop()}>\n          Pause\n        </Button>\n      ) : (\n        <Button id=\"start_stop\" onClick={() => start()}>\n          Start\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default StartStop;\n","import React, { useContext } from 'react';\nimport { PomodoroContext } from '../context/GlobalState';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: 2px solid #000;\n  border-radius: 2px;\n  padding: 0.7rem 1rem;\n  font-family: 'Fira Code', monospace;\n  font-size: 1.5rem;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 500;\n  cursor: pointer;\n  transition: border-radius 200ms;\n  &:hover {\n    border-radius: 15px;\n  }\n`;\n\nconst Reset = () => {\n  const { reset } = useContext(PomodoroContext);\n  return (\n    <Button\n      id=\"reset\"\n      onClick={() => {\n        reset();\n      }}\n    >\n      Reset\n    </Button>\n  );\n};\n\nexport default Reset;\n","import React from 'react';\nimport LengthControl from './LengthControl';\nimport StartStop from './StartStop';\nimport Reset from './Reset';\nimport styled from 'styled-components';\n\nconst ControlsWrapper = styled.div`\n  padding: 2rem;\n  width: 300px;\n  height: 400px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  width: 100%;\n  align-items: center;\n  height: 59px;\n`;\n\nconst Controls = () => {\n  return (\n    <ControlsWrapper>\n      <LengthControl type=\"session\" />\n      <LengthControl type=\"break\" />\n      <Flex>\n        <StartStop />\n        <Reset />\n      </Flex>\n    </ControlsWrapper>\n  );\n};\n\nexport default Controls;\n","import React, { useRef, useContext, useEffect } from 'react';\nimport { PomodoroContext } from '../context/GlobalState';\nimport styled from 'styled-components';\n\nconst radius = 200;\nconst stroke = 8;\nconst circumference = (radius - stroke * 2) * 2 * Math.PI;\n\nconst Border = styled.circle`\n  stroke-width: ${stroke};\n  stroke: #c0121d;\n  fill: #d93a44;\n  r: calc(${radius} - ${stroke} * 2);\n  cx: ${radius};\n  cy: ${radius};\n  stroke-dasharray: ${circumference} ${circumference};\n  stroke-dashoffset: ${circumference};\n  transition: stroke-dashoffset 500ms;\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n`;\n\nconst Circle = () => {\n  const { currentTimer, breakTime, sessionTime } = useContext(PomodoroContext);\n  const progressCircle = useRef();\n\n  useEffect(() => {\n    let totalTime;\n    currentTimer.type === 'Session'\n      ? (totalTime = sessionTime * 60000)\n      : (totalTime = breakTime * 60000);\n\n    const amount = currentTimer.time / totalTime;\n    let offset = circumference - amount * circumference;\n    requestAnimationFrame(() => {\n      progressCircle.current.style.strokeDashoffset = offset;\n    });\n  }, [currentTimer.time, currentTimer.type, sessionTime, breakTime]);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{\n        height: radius * 2,\n        width: radius * 2,\n        backgroundColor: 'transparent',\n        gridColumn: 1,\n        gridRow: 1,\n        zIndex: -1,\n      }}\n    >\n      <Border ref={progressCircle} />\n    </svg>\n  );\n};\n\nexport default Circle;\n","import React from 'react';\nimport Timer from './Timer';\nimport Controls from './Controls';\nimport Circle from './Circle';\nimport styled from 'styled-components';\n\nconst Clock = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PomodoroClock = () => {\n  return (\n    <Clock>\n      <div style={{ display: 'grid' }}>\n        <Timer />\n        <Circle />\n      </div>\n\n      <Controls />\n    </Clock>\n  );\n};\n\nexport default PomodoroClock;\n","import React from 'react';\nimport PomodoroClock from './components/PomodoroClock';\nimport { PomodoroProvider } from './context/GlobalState';\n\nconst App = () => {\n  return (\n    <PomodoroProvider>\n      <PomodoroClock />\n    </PomodoroProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}